plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = '-1.20.1-fogre-1.0.0'
group = 'savage.wither'

// 禁用测试源集
sourceSets {
    test {
        java.srcDirs = []
        resources.srcDirs = []
    }
}

// 确保所有任务使用UTF-8编码
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    // 禁用所有编译警告
    options.compilerArgs += ["-Xlint:none"]
}

tasks.withType(ProcessResources).configureEach {
    filteringCharset = 'UTF-8'
}

base {
    archivesName = '更凶猛的凋零'
}

java {
    archivesBaseName = '更凶猛的凋零1.20.1'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    
    compileJava {
        options.compilerArgs << '-Xlint:deprecation'
        options.deprecation = true
    }
}

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }
    }
}

sourceSets.main.resources { 
    srcDir 'src/main/resources'
}

repositories {
    mavenCentral()
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

// 配置Mixin不生成默认的refmap文件
mixin {
    add sourceSets.main, "savage_wither.refmap.json"
    config "savage_wither.mixins.json"
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
    
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1',
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'MixinConfigs'            : 'savage_wither.mixins.json'
        ])
    }
    
    // 确保 refMap 被包含在 jar 中
    from("$buildDir/tmp/compileJava") {
        include 'mixin.refmap.json'
        rename 'mixin.refmap.json', 'savage_wither.refmap.json'
    }
    
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    finalizedBy 'reobfJar'
    
    // 设置自定义文件名
    archiveFileName = "savage_wither${version}.jar"
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
